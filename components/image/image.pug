extends ../../hotsite/template

block content
  nav.header
    a.logotype(href='/') minimalist
    a image


  .showcase.mn-layout-fullscreen.mn-layout-centered
    .demo.mn-layout-container
      h1 mn-image

      .mn-form.mn-layout-column.mn-layout-sm-row
        a: mn-image.flex(src='http://15858-presscdn-0-65.pagely.netdna-cdn.com/wp-content/uploads/sites/default/files/images/19bigstockKoalaBearsleepinginatree15688901jpg.jpg')
        //- a: mn-image.flex(src='https://s-media-cache-ak0.pinimg.com/originals/90/23/ce/9023ce4196add2eb853627bbc53b272a.jpg')
        a: mn-image.flex(src='http://66.media.tumblr.com/46179d3ef5b19665e5f1274bb0d84087/tumblr_o4zk6mEISo1qi4ucgo1_1280.jpg')

  .docs.mn-layout-container
    section
      h2 install
      mn-code.
        npm install --save minimalist
      p and bundle it with your preferred tool.

    section
      h2 usage
      p in your html, you can use the tag <code>&lt;mn-input&gt;</code>, e.g.

      mn-code.
        &lt;mn-input&gt;&lt;/mn-input&gt;

    section
      h2 Attributes
      p The complete list of attributes supported is the following:

    section
      h3: a(name='placeholder' href='input.html#placeholder') placeholder
      p The title of input, indicate what content the user needs write.

      mn-code.
        &lt;mn-input placeholder="firstname"&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(placeholder='firstname')

    section
      h3: a(name='name' href='input.html#name') name
      p The name is the identifier of input, used to interact with input in javascript

      mn-code.
        // html
        &lt;form id="test"&gt;
          &lt;mn-input placeholder="firstname" value="John" name="firstname"&gt;&lt;/mn-input&gt;
        &lt;/form&gt;

        // js
        console.log(test.firstname) // return the reference to input
        console.log(test.firstname.value) // return the value on input

        console.log(test.data) // will return

        {
          firstname: 'John',
        }
      .mn-card.padding
        mn-form#test: mn-input(placeholder='firstname' value='John' name='firstname')

    section
      h3: a(name='value' href='input.html#value') value
      p Used to set the initial value of mn-input, e.g.
      mn-code.
        &lt;mn-input value="John"&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(value='John')

      mn-code.
        // you can use value as property in javascript, e.g.
        const input = document.querySelector('mn-input')
        input.value = 'John'
        console.log(input.value)

    section
      h3: a(name='multiple' href='input.html#multiple') multiple
      p Allow to user type multiple value on input.
      mn-code.
        &lt;mn-input multiple&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(placeholder='names' multiple value='["stark", "targaryen"]')
      mn-code.
        const input = document.querySelector('mn-input')
        console.log(input.value) // the value of input multiple always be an array

    section
      h3: a(name='autofocus' href='input.html#autofocus') autofocus
      p Used to automatically focus on input once time page opens.

      mn-code.
        &lt;mn-input autofocus&gt;&lt;/mn-input&gt;

    section
      h3: a(name='autocapitalize' href='input.html#autocapitalize') autocapitalize
      p Only for mobile, by default is off, but you can turn on like below

      mn-code.
        &lt;mn-input autocapitalize='on'&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(autocapitalize placeholder='try edit it on mobile device')

    section
      h3: a(name='maxlength' href='input.html#maxlength') maxlength
      p Useful to limit characters on input, e.g.

      mn-code.
        &lt;mn-input maxlength='3'&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(maxlength='3' value='abc' placeholder='try type anything')

    section
      h3: a(name='required' href='input.html#required') required
      p Set input as required, so user cannot submit form without fill it correctly

      mn-code.
        &lt;mn-input required&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-form.submitted: mn-input.invalid.required(placeholder='firstname' required)

    section
      h3: a(name='pattern' href='input.html#pattern') pattern
      p Allow to you validate content using regular expression, in example below, we validate firstname has only letters

      mn-code.
        &lt;mn-input pattern='^[a-zA-Z]+$'&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-form.submitted: mn-input.invalid(placeholder='firstname' pattern="^[a-zA-Z]+$" value='john snow')

    section
      h3: a(name='readonly' href='input.html#readonly') readonly
      p Sets input as read only, so user cannot change the value, but can navigate to them using keyboard and copy.

      mn-code.
        &lt;mn-input readonly&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(placeholder='firstname' value='john' readonly)

    section
      h3: a(name='disabled' href='input.html#disabled') disabled
      p Sets input as disabled, so user cannot navigate to them, but can copy.

      mn-code.
        &lt;mn-input disabled&gt;&lt;/mn-input&gt;
      .mn-card.padding
        mn-input(placeholder='firstname' value='john' disabled)




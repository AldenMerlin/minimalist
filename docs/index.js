!function(t){var e={};function n(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,s){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(s,i,function(e){return t[e]}.bind(null,i));return s},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./index.js")}({"./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nmodule.exports = {\n  form: __webpack_require__(/*! ./src/form/form.class.js */ "./src/form/form.class.js"),\n  inputText: __webpack_require__(/*! ./src/input-text/input-text.class.js */ "./src/input-text/input-text.class.js"),\n  inputPassword: __webpack_require__(/*! ./src/input-password/input-password.class.js */ "./src/input-password/input-password.class.js"),\n  inputNumber: __webpack_require__(/*! ./src/input-number/input-number.class.js */ "./src/input-number/input-number.class.js")\n};\n\n//# sourceURL=webpack:///./index.js?')},"./src/component/component.class.js":
/*!******************************************!*\
  !*** ./src/component/component.class.js ***!
  \******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass MnComponent extends window.HTMLElement {\n  constructor(self) {\n    super(self);\n  }\n\n  attributeChangedCallback(name, old, value) {\n    if (this.parentNode) {\n      this[name] = value;\n    }\n\n    if (this.inputChild) {\n      this.inputChild.dispatchEvent(new Event('change'));\n    }\n  }\n\n  setAttributes() {\n    Array.from(this.attributes).forEach(attr => {\n      const { observedAttributes } = this.constructor;\n      const isObservedAttr = observedAttributes && observedAttributes.find(observed => observed === attr.name);\n\n      if (isObservedAttr) {\n        this[attr.name] = attr.value;\n      }\n    });\n  }\n\n  empty() {\n    this.innerHTML = '';\n  }\n\n  setChildren(name, attributes = {}) {\n    const children = document.createElement(name);\n    this[`${name}Child`] = children;\n    this.appendChild(children);\n\n    Object.entries(attributes).forEach(([attribute, value]) => {\n      children.setAttribute(attribute, value);\n    });\n  }\n\n  is(attribute) {\n    return this.hasAttribute(attribute) && this.getAttribute(attribute) !== 'false';\n  }\n}\n\nexports.default = MnComponent;\n\n//# sourceURL=webpack:///./src/component/component.class.js?")},"./src/form/form.class.js":
/*!********************************!*\
  !*** ./src/form/form.class.js ***!
  \********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _componentClass = __webpack_require__(/*! ../component/component.class.js */ \"./src/component/component.class.js\");\n\nvar _componentClass2 = _interopRequireDefault(_componentClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass MnForm extends _componentClass2.default {\n  connectedCallback() {\n    this.setStyle();\n    super.setAttributes();\n  }\n\n  static get observedAttributes() {\n    return ['disabled', 'readonly'];\n  }\n\n  setStyle() {\n    this.classList.add('mn-form');\n  }\n\n  validate() {\n    this.dispatchEvent(new Event('validate'));\n    this.inputs.filter(input => !input.disabled && !input.readonly).forEach(input => input.validate());\n\n    const isInvalid = !this.querySelector('.invalid');\n    return isInvalid;\n  }\n\n  get disabled() {\n    return this.is('disabled');\n  }\n\n  set disabled(value) {\n    if (value && !this.hasAttribute('disabled')) {\n      this.setAttribute('disabled', value);\n    }\n\n    this.inputs.forEach(input => input.disabled = value);\n  }\n\n  get readonly() {\n    return this.is('readonly');\n  }\n\n  set readonly(value) {\n    if (value && !this.hasAttribute('readonly')) {\n      this.setAttribute('readonly', value);\n    }\n\n    this.inputs.forEach(input => input.readonly = value);\n  }\n\n  get inputs() {\n    return Array.from(this.querySelectorAll('.mn-input-text'));\n  }\n\n  get data() {\n    return this.inputs.reduce((object, element) => Object.assign(object, { [element.name]: element.value }), {});\n  }\n}\n\nwindow.customElements.define('mn-form', MnForm);\n\nexports.default = MnForm;\n\n//# sourceURL=webpack:///./src/form/form.class.js?")},"./src/input-number/input-number.class.js":
/*!************************************************!*\
  !*** ./src/input-number/input-number.class.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inputTextClass = __webpack_require__(/*! ../input-text/input-text.class.js */ \"./src/input-text/input-text.class.js\");\n\nvar _inputTextClass2 = _interopRequireDefault(_inputTextClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass MnInputNumber extends _inputTextClass2.default {\n  connectedCallback() {\n    super.empty();\n    super.setStyle();\n    this.setStyle();\n    super.setChildren('label');\n    super.setChildren('input');\n    this.setInputEvents();\n    this.setMask();\n    this.setTransforms();\n    this.setAttributes();\n  }\n\n  setStyle() {\n    this.classList.add('mn-input-number');\n  }\n\n  static get observedAttributes() {\n    return ['label', 'value', 'name', 'placeholder', 'disabled', 'readonly', 'autofocus', 'currency', 'precision', 'min', 'max', 'percentage'];\n  }\n\n  setTransforms() {\n    const transform = () => {\n      try {\n        const value = eval(this.inputChild.value.replace(/,/g, '.'));\n        const isNumber = typeof value === 'number';\n        this.inputChild.value = isNumber ? String(value).replace(/\\./g, ',') : '';\n\n        const hasPrecision = this.hasAttribute('precision');\n        const precision = this.getAttribute('precision') || 0;\n\n        switch (true) {\n          case this.is('currency'):\n            this.inputChild.value = value.toFixed(precision || 2).replace(/\\./g, ',');\n            break;\n\n          case hasPrecision:\n            this.inputChild.value = value.toFixed(precision).replace(/\\./g, ',');\n            break;\n        }\n      } catch (e) {\n        this.inputChild.value = '';\n      }\n\n      this.updateMask();\n    };\n\n    this.inputChild.addEventListener('change', transform);\n    this.inputChild.addEventListener('blur', transform);\n  }\n\n  setInputEvents() {\n    super.setInputEvents();\n\n    const incrementOrDecrement = event => {\n      const stepValue = this.is('percentage') ? +this.getAttribute('step') / 100 || 1 / 100 : +this.getAttribute('step') || 1;\n\n      const isArrowUp = event.key === 'ArrowUp';\n      const isArrowDown = event.key === 'ArrowDown';\n\n      if (!this.is('readonly') && (isArrowUp || isArrowDown)) {\n        event.preventDefault();\n        const step = event.shiftKey ? stepValue * 10 : event.altKey ? stepValue / 10 : stepValue;\n\n        const previousValue = this.value || 0;\n        const precision = String(step).replace(/\\d+\\./, '').length;\n        let value;\n\n        switch (event.key) {\n          case 'ArrowUp':\n            value = previousValue + step;\n            break;\n          case 'ArrowDown':\n            value = previousValue - step;\n            break;\n        }\n\n        this.value = +value.toFixed(precision);\n      }\n    };\n\n    this.inputChild.addEventListener('keydown', incrementOrDecrement);\n  }\n\n  setMask() {\n    this.mask = document.createElement('div');\n    this.mask.classList.add('mask');\n    this.appendChild(this.mask);\n\n    this.inputChild.addEventListener('input', () => {\n      this.updateMask();\n    });\n  }\n\n  updateMask() {\n    const hasValue = this.inputChild.value !== '' && !/^\\s+$/.test(this.inputChild.value);\n    if (this.mask && this.is('percentage')) {\n      const text = hasValue ? `${this.inputChild.value} %` : '';\n      this.mask.textContent = text;\n    }\n  }\n\n  set percentage(value) {\n    const number = +this.inputChild.value.replace(/,/g, '.');\n    value = this.is('percentage') ? number * 100 : number / 100;\n    if (number) {\n      this.inputChild.value = value;\n      this.updateMask();\n    }\n  }\n\n  get value() {\n    const number = +this.inputChild.value.replace(/,/g, '.');\n    const isNumber = this.inputChild.value && !Number.isNaN(number);\n\n    return isNumber ? this.is('percentage') ? number / 100 : number : undefined;\n  }\n\n  set value(value = '') {\n    this.inputChild.value = this.is('percentage') ? value * 100 : value;\n    this.inputChild.dispatchEvent(new Event('change'));\n    this.classList.toggle('has-value', this.hasValue);\n  }\n\n  get min() {\n    return this.labelChild.hasAttribute('min') ? +this.labelChild.getAttribute('min') : undefined;\n  }\n\n  set min(value) {\n    value ? this.labelChild.setAttribute('min', value) : this.labelChild.removeAttribute('min');\n  }\n\n  get max() {\n    return this.labelChild.hasAttribute('max') ? +this.labelChild.getAttribute('max') : undefined;\n  }\n\n  set max(value) {\n    value ? this.labelChild.setAttribute('max', value) : this.labelChild.removeAttribute('max');\n  }\n\n  get validations() {\n    return {\n      required: super.validations.required,\n      max: () => {\n        return this.hasValue ? this.value > +this.getAttribute('max') : false;\n      },\n      min: () => {\n        return this.hasValue ? this.value < +this.getAttribute('min') : false;\n      }\n    };\n  }\n}\n\nwindow.customElements.define('mn-input-number', MnInputNumber);\n\nexports.default = MnInputNumber;\n\n//# sourceURL=webpack:///./src/input-number/input-number.class.js?")},"./src/input-password/input-password.class.js":
/*!****************************************************!*\
  !*** ./src/input-password/input-password.class.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inputTextClass = __webpack_require__(/*! ../input-text/input-text.class.js */ \"./src/input-text/input-text.class.js\");\n\nvar _inputTextClass2 = _interopRequireDefault(_inputTextClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass MnInputPassword extends _inputTextClass2.default {\n  connectedCallback() {\n    super.empty();\n    super.setStyle();\n    this.setStyle();\n    super.setChildren('label');\n    super.setChildren('input');\n    super.setChildren('button');\n    this.setInput();\n    super.setInputEvents();\n    this.setVisibility();\n    this.setAttributes();\n  }\n\n  setStyle() {\n    this.classList.add('mn-input-password');\n  }\n\n  setInput() {\n    this.inputChild.setAttribute('type', 'password');\n  }\n\n  setVisibility() {\n    this.buttonChild.addEventListener('click', () => this.toggleVisibility());\n  }\n\n  toggleVisibility() {\n    const isPassword = this.inputChild.getAttribute('type') === 'password';\n    const type = isPassword ? 'text' : 'password';\n\n    this.classList.toggle('show-password', isPassword);\n    this.inputChild.setAttribute('type', type);\n  }\n}\n\nwindow.customElements.define('mn-input-password', MnInputPassword);\n\nexports.default = MnInputPassword;\n\n//# sourceURL=webpack:///./src/input-password/input-password.class.js?")},"./src/input-text/input-text.class.js":
/*!********************************************!*\
  !*** ./src/input-text/input-text.class.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _componentClass = __webpack_require__(/*! ../component/component.class.js */ \"./src/component/component.class.js\");\n\nvar _componentClass2 = _interopRequireDefault(_componentClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass MnInputText extends _componentClass2.default {\n  connectedCallback() {\n    super.empty();\n    this.setStyle();\n    super.setChildren('label');\n    super.setChildren('input', { autocomplete: 'off' });\n    this.setInputEvents();\n    super.setAttributes();\n  }\n\n  static get observedAttributes() {\n    return ['label', 'value', 'name', 'placeholder', 'disabled', 'readonly', 'maxlength', 'autocapitalize', 'autofocus', 'pattern'];\n  }\n\n  setStyle() {\n    this.classList.add('mn-input-text');\n  }\n\n  setInputEvents() {\n    this.inputChild.addEventListener('focus', () => {\n      this.classList.add('focus');\n    });\n\n    this.inputChild.addEventListener('blur', () => {\n      this.classList.remove('focus');\n      this.classList.toggle('has-value', this.hasValue);\n    });\n\n    this.inputChild.addEventListener('input', event => {\n      const element = event.currentTarget.parentNode;\n      const closestForm = this.closest('mn-form') || this.closest('form');\n\n      if (closestForm && closestForm.classList.contains('submitted')) {\n        element.validate();\n      }\n    });\n  }\n\n  get validations() {\n    return {\n      required: () => !this.hasValue,\n      pattern: () => {\n        const reg = new RegExp(this.getAttribute('pattern'));\n\n        return this.hasValue ? !reg.test(this.value) : false;\n      }\n    };\n  }\n\n  validate() {\n    const validations = {};\n\n    for (const attribute of Object.keys(this.validations)) {\n      const hasAttribute = this.hasAttribute(attribute);\n      const attributeIsInvalid = this.validations[attribute]();\n\n      if (hasAttribute && attributeIsInvalid) {\n        this.classList.add(attribute);\n        validations[attribute] = true;\n      } else {\n        this.classList.remove(attribute);\n      }\n    }\n\n    const isInvalid = Object.values(validations).some(item => item === true);\n\n    isInvalid ? this.classList.add('invalid') : this.classList.remove('invalid');\n  }\n\n  get pattern() {\n    return this.inputChild.pattern || undefined;\n  }\n\n  set pattern(value) {\n    value ? this.inputChild.setAttribute('pattern', value) : this.inputChild.removeAttribute('pattern');\n  }\n\n  get label() {\n    return this.labelChild.textContent;\n  }\n\n  set label(value = '') {\n    this.labelChild.textContent = value;\n  }\n\n  get hasValue() {\n    return !(this.value === undefined || this.value === null || this.value === '');\n  }\n\n  get value() {\n    return this.inputChild.value;\n  }\n\n  set value(value = '') {\n    this.inputChild.value = value;\n    this.inputChild.dispatchEvent(new Event('change'));\n    this.classList.toggle('has-value', this.hasValue);\n  }\n\n  get name() {\n    return this.inputChild.getAttribute('name');\n  }\n\n  set name(value) {\n    value ? this.inputChild.setAttribute('name', value) : this.inputChild.removeAttribute('name');\n  }\n\n  get placeholder() {\n    return this.inputChild.getAttribute('placeholder');\n  }\n\n  set placeholder(value) {\n    this.inputChild.setAttribute('placeholder', value);\n  }\n\n  get disabled() {\n    return this.inputChild.disabled;\n  }\n\n  set disabled(value) {\n    if (JSON.parse(value) !== this.is('disabled')) {\n      this.setAttribute('disabled', JSON.parse(value));\n    }\n    this.inputChild.disabled = JSON.parse(value);\n  }\n\n  get readonly() {\n    return this.inputChild.readOnly;\n  }\n\n  set readonly(value) {\n    if (JSON.parse(value) !== this.is('readonly')) {\n      this.setAttribute('readonly', JSON.parse(value));\n    }\n    this.inputChild.readOnly = JSON.parse(value);\n  }\n\n  get maxlength() {\n    return this.inputChild.getAttribute('maxlength');\n  }\n\n  set maxlength(value) {\n    this.inputChild.setAttribute('maxlength', value);\n  }\n\n  get autocapitalize() {\n    return this.inputChild.getAttribute('autocapitalize');\n  }\n\n  set autocapitalize(value) {\n    this.inputChild.setAttribute('autocapitalize', value);\n  }\n\n  get autofocus() {\n    return this.inputChild.getAttribute('autofocus') || undefined;\n  }\n\n  set autofocus(value) {\n    value ? this.inputChild.setAttribute('autofocus', value) : this.inputChild.removeAttribute('autofocus');\n  }\n}\n\nwindow.customElements.define('mn-input-text', MnInputText);\n\nexports.default = MnInputText;\n\n//# sourceURL=webpack:///./src/input-text/input-text.class.js?")}});
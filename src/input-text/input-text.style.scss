.mn-input-text {
  position: relative;
  display: inline-flex;
  padding-top: 0.7em;
  font-family: sans-serif;

  --text-color: #212529;
  --selection-color: #ced4da;
  --border-width: 1px;
  --border-color: #ced4da;
  --placeholder-color: #868e96;
  --label-color: #868e96;
  --invalid-message: ' is invalid';

  &::selection {
    background: var(--selection-color);
  }

  &:after {
    content: '';
    height: var(--border-width);
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: var(--border-color);
    transition: all .2s ease;
  }

  input {
    order: 1;
    border: 0;
    outline: 0;
    transition: opacity .2s ease;
    box-sizing: border-box;
    padding: 0;
    border-radius: 0;
    -webkit-appearance: none;
    -webkit-tap-highlight-color: transparent;
    text-overflow: inherit;
    background-color: transparent;
    color: var(--text-color);
    position: relative;
    transition: opacity .2s ease;
    opacity: 0;
    box-shadow: none;
    font-size: inherit;

    &::placeholder {
      color: transparent;
      transition: color .2s ease;
    }

    &::selection {
      background: var(--selection-color);
    }
  }

  label {
    color: var(--label-color);
    pointer-events: none;
    position: absolute;
    bottom: 0;
    left: 0;
    transform-origin: left center;
    transition: all .2s ease;
    user-select: none;
  }

  input, label {
    height: 2em;
    line-height: 2em;
  }

  .value-item {
    line-height: 2em;
    --background-color: #495057;
    --color: #e9ecef;

    font-size: .7em;
    color: var(--color);
    background-color: var(--background-color);
    padding: 0 1em;
    margin: .1em;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
    text-align: center;
    border-radius: 1.2em;
    text-align: center;
    height: 2em;
    transform: translate3d(0, 0.35em, 0);
    margin-right: .5em;
  }

  &.focus:not([readonly=""]):not([readonly="true"]) {
    --border-width: 2px;
    --border-color: #343a40;
  }

  &.has-value, &.focus {
    label {
      transform: translate3d(0, -1.3em, 0) scale(.8) translateZ(0);
    }

    input {
      opacity: 1;
      transition-delay: .15s;
      &::placeholder {color: var(--placeholder-color)}
    }
  }

  &[disabled=""], &[disabled="true"] {
    --text-color: #868e96;
    --border-color: #dee2e6;
    --label-color: #adb5bd;
    --placeholder-color: #adb5bd;

    input:hover {cursor: not-allowed}
  }

  &.invalid {
    --label-color: #f03e3e !important;
    --border-color: #fa5252 !important;

    label:after {
      content: var(--invalid-message);
    }

    &.required {
      --invalid-message: ' is required';
    }
  }
}
